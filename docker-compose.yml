services:
  download:
    build: download
    image: asmial/n7m-download
    environment:
      - OSM_AREAS=$OSM_AREAS
      - PGHOST=gis
      - PGDATABASE=$POSTGRES_DATABASE
      - PGUSER=$POSTGRES_USER
      - PGPASSWORD=$POSTGRES_PASSWORD
    volumes:
      - ./data:/tileset
    healthcheck:
      test: "/scripts/test.sh"
      interval: 1s
      timeout: 5s
      retries: 3600
  web:
    build: web
    image: smithmicro/n7m-web
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - api
      - ui
    mem_limit: 100m
  ui:
    build: ui
    image: smithmicro/n7m-ui
    restart: always
    mem_limit: 100m
  api:
    build: api
    image: smithmicro/n7m-api
    restart: always
    environment:
      - PGHOST=gis
      - PGDATABASE=$POSTGRES_DATABASE
      - PGUSER=$POSTGRES_USER
      - PGPASSWORD=$POSTGRES_PASSWORD
      - WEB_CONCURRENCY=2
    depends_on:
      - gis
    mem_limit: 200m
  feed:
    build: feed
    image: smithmicro/n7m-feed
    depends_on:
      gis:
        condition: service_started
    environment:
      - PGHOST=gis
      - PGDATABASE=$POSTGRES_DATABASE
      - PGUSER=$POSTGRES_USER
      - PGPASSWORD=$POSTGRES_PASSWORD
      - NOMINATIM_REPLICATION_MAX_DIFF=3000
      - NOMINATIM_REPLICATION_UPDATE_INTERVAL=86400
      - OSM_AREAS=$OSM_AREAS
    volumes:
      - ./data:/data/
  gis:
    build: gis
    image: smithmicro/n7m-gis
    restart: always
    depends_on:
      download:
        condition: service_healthy
    environment:
      - PGDPOSTGRES_DATABASE=$POSTGRES_DATABASE
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=n7m-geocoding
    volumes:
      - ./pgdata:/var/lib/postgresql/data
